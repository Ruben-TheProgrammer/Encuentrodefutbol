/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formulario;

import encuentrodefutbol.Arbitro;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rolando Ramos
 */
public class FormularioArbitros extends javax.swing.JInternalFrame {

  

    
    
        EntityManagerFactory emf = null;
        EntityManager em = null;
        
        private int filaSeleccionada = -1;
        
        
        
    /**
     * Creates new form GeneroGui
     */
    public FormularioArbitros(){
                initComponents();
                emf = Persistence.createEntityManagerFactory("C:/base/Practica.odb");
                em = emf.createEntityManager();
                listarm();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        Nombre = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        eliminartxt = new javax.swing.JButton();
        Editar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        eliminartxt.setText("Eliminar");
        eliminartxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminartxtMouseClicked(evt);
            }
        });

        Editar.setText("Editar");
        Editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(guardar)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eliminartxt)
                        .addGap(18, 18, 18)
                        .addComponent(Editar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardar)
                            .addComponent(eliminartxt)
                            .addComponent(Editar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public Arbitro crearArbitro(){   
           String Arbitrol = Nombre.getText();

           Arbitro G = new Arbitro(Arbitrol);

           return G;
       }
    private void NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreActionPerformed

    }                                     

                                         

                                  

        public void listarm() {
                em = emf.createEntityManager(); // Crear un nuevo EntityManager.
                try {
                    Query consultaGen = em.createQuery("SELECT G FROM Arbitro G");
                    List<Arbitro> resultadosGen = consultaGen.getResultList();

                    DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                    modelo.setRowCount(0);

                    for (Arbitro G : resultadosGen) {
                        Object[] fila = new Object[2]; // Crear un arreglo de objetos para representar una fila en la tabla
                        fila[0] = G.getId(); // Agregar el ID como entero
                        fila[1] = G.getNombre();
                        modelo.addRow(fila); // Agregar la fila al modelo de la tabla
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                } finally {
                    em.close();
                }
          
        
    }//GEN-LAST:event_NombreActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
       
                                        
        // TODO add your handling code here:
        em = emf.createEntityManager(); // Crear un nuevo EntityManager
        Arbitro G = crearArbitro();
        try {
            em.getTransaction().begin();
            em.persist(G);
            em.getTransaction().commit();
         JOptionPane.showMessageDialog(this, " Guardado correctamente", "Guardado exitoso", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
                    ex.printStackTrace();
        } finally {
                        em.close();
        }
        listarm();
           // Limpia los campos de texto
            Nombre.setText("");    }//GEN-LAST:event_guardarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
                       // Obtiene la fila seleccionada
            filaSeleccionada = tabla.getSelectedRow();

        // Verifica si se seleccion√≥ una fila
        if (filaSeleccionada != -1) {
            // Obtiene los datos de la fila seleccionada
            String generoSeleccionado = (String) tabla.getValueAt(filaSeleccionada, 1);

            // Muestra los datos en los campos de texto
            Nombre.setText(generoSeleccionado);
        }        
    }//GEN-LAST:event_tablaMouseClicked

    private void EditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMouseClicked
        // TODO add your handling code here:
        
         if (filaSeleccionada != -1) {
        String nuevoArbitro = Nombre.getText();
        int idArbitro = (int) tabla.getValueAt(filaSeleccionada, 0);

        em = emf.createEntityManager();
        try {
            em.getTransaction().begin();
            Arbitro G = em.find(Arbitro.class, idArbitro);
            G.setNombre(nuevoArbitro);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(this, " Editado correctamente", "Edici√≥n exitosa", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            em.close();
        }

        listarm();
        Nombre.setText("");
                    filaSeleccionada = -1;
         }
    }//GEN-LAST:event_EditarMouseClicked

    private void eliminartxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminartxtMouseClicked
        // TODO add your handling code here:
          int filaSeleccionada = tabla.getSelectedRow();

    if (filaSeleccionada != -1) {
        int idArbitro = (int) tabla.getValueAt(filaSeleccionada, 0);

        em = emf.createEntityManager();
        try {
            em.getTransaction().begin();
            Arbitro G = em.find(Arbitro.class, idArbitro);
            em.remove(G);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(this, " Eliminado correctamente", "Eliminaci√≥n exitosa", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            em.close();
        }

        listarm();
        Nombre.setText("");
        
    }//GEN-LAST:event_eliminartxtMouseClicked
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Editar;
    private javax.swing.JTextField Nombre;
    private javax.swing.JButton eliminartxt;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
